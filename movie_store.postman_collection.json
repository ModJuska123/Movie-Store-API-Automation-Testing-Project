{
	"info": {
		"_postman_id": "86ce92fb-530a-4184-aa2f-cc1aa98a6cad",
		"name": "Movie_Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34663841"
	},
	"item": [
		{
			"name": "create and remove a movie",
			"item": [
				{
					"name": "PostMovie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();",
									"const requestData = JSON.parse(pm.request.body.raw);",
									"",
									"pm.environment.set(\"movieId\", responseData.id);",
									"pm.environment.set(\"title\", requestData.title);",
									"pm.environment.set(\"productionDate\", requestData.productionDate);",
									"pm.environment.set(\"producer\", requestData.producer);",
									"pm.environment.set(\"rating\", requestData.rating);",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData).to.have.property('id');",
									"  pm.expect(responseData).to.have.property('title', pm.environment.get(\"title\"));",
									"  pm.expect(responseData).to.have.property('productionDate', pm.environment.get(\"productionDate\"));",
									"  pm.expect(responseData).to.have.property('producer', pm.environment.get(\"producer\"));",
									"  pm.expect(responseData).to.have.property('rating', pm.environment.get(\"rating\"));",
									"});",
									"",
									"pm.test(\"Production date, producer, and rating are in the expected format and values\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData.producer).to.be.a('string').and.to.not.be.empty;",
									"  pm.expect(responseData.rating).to.be.a('number').and.to.be.at.least(0);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"productionDate\": \"2010-07-16\",\r\n  \"producer\": \"Emma Thomas\",\r\n  \"rating\": 8.8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/movies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMovies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"pm.test(\"Response has the required Content-Type header set to application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/movies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMovieById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/movies/{{movieId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"movies",
								"{{movieId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"productionDate\": \"2010-07-16\",\r\n  \"producer\": \"Emma Thomas\",\r\n  \"rating\": 8.8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/movies/{{movieId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"movies",
								"{{movieId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMovieDeleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.to.have.status(200));",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"productionDate\": \"2010-07-16\",\r\n  \"producer\": \"Emma Thomas\",\r\n  \"rating\": 8.8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/movies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "update movie rating",
			"item": [
				{
					"name": "PostMovie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();",
									"const requestData = JSON.parse(pm.request.body.raw);",
									"",
									"pm.environment.set(\"movieId\", responseData.id);",
									"pm.environment.set(\"title\", requestData.title);",
									"pm.environment.set(\"productionDate\", requestData.productionDate);",
									"pm.environment.set(\"producer\", requestData.producer);",
									"pm.environment.set(\"rating\", requestData.rating);",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData).to.have.property('id');",
									"  pm.expect(responseData).to.have.property('title', pm.environment.get(\"title\"));",
									"  pm.expect(responseData).to.have.property('productionDate', pm.environment.get(\"productionDate\"));",
									"  pm.expect(responseData).to.have.property('producer', pm.environment.get(\"producer\"));",
									"  pm.expect(responseData).to.have.property('rating', pm.environment.get(\"rating\"));",
									"});",
									"",
									"pm.test(\"Production date, producer, and rating are in the expected format and values\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData.producer).to.be.a('string').and.to.not.be.empty;",
									"  pm.expect(responseData.rating).to.be.a('number').and.to.be.at.least(0);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"productionDate\": \"2010-07-16\",\r\n  \"producer\": \"Emma Thomas\",\r\n  \"rating\": 8.8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/movies/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"movies",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMovieById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/movies/{{movieId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"movies",
								"{{movieId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutMovie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData).to.have.property('id');",
									"  pm.expect(responseData).to.have.property('title');",
									"  pm.expect(responseData).to.have.property('productionDate');",
									"  pm.expect(responseData).to.have.property('producer');",
									"  pm.expect(responseData).to.have.property('rating');",
									"});",
									"",
									"pm.test(\"Title is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.title).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Title should not be empty\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2,\r\n    \"title\": \"Inception\",\r\n    \"productionDate\": \"2010-07-16\",\r\n    \"producer\": \"Emma Thomas\",\r\n    \"rating\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/movies/{{movieId}}/rating/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"movies",
								"{{movieId}}",
								"rating",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"productionDate\": \"2010-07-16\",\r\n  \"producer\": \"Emma Thomas\",\r\n  \"rating\": 8.8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/movies/{{movieId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"movies",
								"{{movieId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMovieDeleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.to.have.status(200));",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"productionDate\": \"2010-07-16\",\r\n  \"producer\": \"Emma Thomas\",\r\n  \"rating\": 8.8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/movies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}